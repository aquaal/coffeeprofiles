# A. Quaal -- coffee_cleaner.py
# Created: November 28, 2020

# This script is designed to read, clean, and compile data from the .txt files generated by the 'coffee_scraper.py' program

# Import required packages
import re
import glob
import pandas as pd

# Read all files in directory to iterate over
file_list = glob.glob1("coffee_data/", "*.txt")

# List column labels for dataframe
labels = ['Name', 'Origin', 'Processing', 'Floral', 'Honey', 'Sugars', 'Caramel', 'Fruits', 'Citrus', 'Berry', 'Cocoa', 'Nuts', 'Rustic', 'Spice', 'Body (Flavor)', 'Dry Fragrance', 'Wet Aroma', 'Brightness', 'Flavor', 'Body (Cupping)', 'Finish', 'Sweetness', 'Clean Cup', 'Complexity', 'Uniformity', 'Total Score']

africa_origins= ['Ethiopia', 'Kenya', 'Burundi', 'Tanzania', 'Rwanda']
south_america_origins = ['Costa Rica', 'El Salvador', 'Guatemala', 'Nicaragua', 'Honduras', 'Panama', 'Mexico', 'Brazil', 'Colombia', 'Peru']
southeast_asia_origins = ['Sumatra', 'Indonesia', 'Java', 'Bali', 'Flores', 'Sulawesi', 'Timor', 'Papua New Guinea']

# Initialize dictionary
coffee_data = dict()

# Iterate through files in directory, pulling data and adding to coffee_data dictionary
i = 1
for file in file_list:
    # Open file and initialize list for this file's data
    f = open("coffee_data/" + file, "r")
    coffee_text = f.read()
    coffee = []
    
    # Pull name using regular expression and append it to coffee list
    name_string = re.findall('data-chart-label="(.*?)"', coffee_text)
    name = name_string[0]
    coffee.append(name)

    # Determine coffee origin based on name and append it to coffee list
    origin_determined = False
    for country in africa_origins:
        if name.startswith(country):
            coffee.append("East Africa")
            origin_determined = True
    
    if origin_determined == False:
        for country in south_america_origins:
            if name.startswith(country):
                coffee.append("South America")
                origin_determined = True
    
    if origin_determined == False:
        for country in southeast_asia_origins:
            if name.startswith(country):
                coffee.append("Southeast Asia")
                origin_determined = True
        
    if origin_determined == False:
        coffee.append("NA")
        
    # Pull processing method using regular expression and append it to coffee list
    process_string = re.findall('Process Method.*?\n<span>(.*?)</span>', coffee_text)
    process = process_string[0]
    coffee.append(process)
    
    # Pull list of flavors and ratings using regular expression and append to coffee list one-by-one
    flavors_string = re.findall('data-chart-id="flavor-chart".*data-chart-value="(.*?)"', coffee_text)
    flavors = re.findall('[A-Z].*?:[0-9]', flavors_string[0])
    for flavor in flavors:
        flavor_split = flavor.split(':')
        coffee.append(float(flavor_split[1]))
    
    # Pull list of cupping scores and ratings using regular expression and append to coffee list one-by-one, along with a total score
    scores_string = re.findall('data-chart-id="cupping-chart".*data-chart-value="(.*?)"', coffee_text)
    scores = re.findall('[A-Z].*?:[0-9]\.*[0-9]*', scores_string[0])
    total_score = 0
    for score in scores:
        score_split = score.split(':')
        coffee.append(float(score_split[1]))
        total_score += float(score_split[1])
    coffee.append(total_score)
    
    # Add coffee data to dictionary using generic ID
    coffee_data[i] = coffee
    i += 1

# Create a dataframe using the coffee_data dictionary, using the rows as indexes and adding column names
coffee_df = pd.DataFrame.from_dict(coffee_data, orient = 'index', columns = labels)

# Export to csv
coffee_df.to_csv('coffee_data.csv', index = False)